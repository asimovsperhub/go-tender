// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MemberIntegralDao is the data access object for table member_integral.
type MemberIntegralDao struct {
	table   string                // table is the underlying table name of the DAO.
	group   string                // group is the database configuration group name of current DAO.
	columns MemberIntegralColumns // columns contains all the column names of Table for convenient usage.
}

// MemberIntegralColumns defines and stores column names for table member_integral.
type MemberIntegralColumns struct {
	Id                  string //
	MonthlycardIntegral string // 月卡积分
	QuartercardIntegral string // 季卡积分
	AnnualcardIntegral  string // 年卡积分
	KnowledgeIntegral   string // 发布知识积分
	VideoIntegral       string // 发布视频积分
	IssueIntegral       string // 发行积分
	Ordinary            string // 普通
	Select              string // 精选
	Ratio               string // 普通积分比例
	MonthlycardRatio    string // 月卡积分比例
	QuartercardRatio    string // 季卡积分比例
	AnnualcardRatio     string // 年卡积分比例
}

//  memberIntegralColumns holds the columns for table member_integral.
var memberIntegralColumns = MemberIntegralColumns{
	Id:                  "id",
	MonthlycardIntegral: "monthlycard_integral",
	QuartercardIntegral: "quartercard_integral",
	AnnualcardIntegral:  "annualcard_integral",
	KnowledgeIntegral:   "knowledge_integral",
	VideoIntegral:       "video_integral",
	IssueIntegral:       "issue_integral",
	Ordinary:            "ordinary",
	Select:              "select",
	Ratio:               "ratio",
	MonthlycardRatio:    "monthlycard_ratio",
	QuartercardRatio:    "quartercard_ratio",
	AnnualcardRatio:     "annualcard_ratio",
}

// NewMemberIntegralDao creates and returns a new DAO object for table data access.
func NewMemberIntegralDao() *MemberIntegralDao {
	return &MemberIntegralDao{
		group:   "default",
		table:   "member_integral",
		columns: memberIntegralColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MemberIntegralDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MemberIntegralDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MemberIntegralDao) Columns() MemberIntegralColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MemberIntegralDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MemberIntegralDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MemberIntegralDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
