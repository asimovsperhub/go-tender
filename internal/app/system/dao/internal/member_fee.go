// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MemberFeeDao is the data access object for table member_fee.
type MemberFeeDao struct {
	table   string           // table is the underlying table name of the DAO.
	group   string           // group is the database configuration group name of current DAO.
	columns MemberFeeColumns // columns contains all the column names of Table for convenient usage.
}

// MemberFeeColumns defines and stores column names for table member_fee.
type MemberFeeColumns struct {
	Id                  string //
	MonthlycardOriginal string // 月卡原价
	MonthlycardCurrent  string // 月卡现价
	QuartercardOriginal string // 季卡原价
	QuartercardCurrent  string // 季卡现价
	AnnualcardOriginal  string // 年卡原价
	AnnualcardCurrent   string // 年卡现价
	DownloadKnowledge   string // 下载知识
	DownloadVideo       string // 下载视频
}

//  memberFeeColumns holds the columns for table member_fee.
var memberFeeColumns = MemberFeeColumns{
	Id:                  "id",
	MonthlycardOriginal: "monthlycard_original",
	MonthlycardCurrent:  "monthlycard_current",
	QuartercardOriginal: "quartercard_original",
	QuartercardCurrent:  "quartercard_current",
	AnnualcardOriginal:  "annualcard_original",
	AnnualcardCurrent:   "annualcard_current",
	DownloadKnowledge:   "download_knowledge",
	DownloadVideo:       "download_video",
}

// NewMemberFeeDao creates and returns a new DAO object for table data access.
func NewMemberFeeDao() *MemberFeeDao {
	return &MemberFeeDao{
		group:   "default",
		table:   "member_fee",
		columns: memberFeeColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MemberFeeDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MemberFeeDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MemberFeeDao) Columns() MemberFeeColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MemberFeeDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MemberFeeDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MemberFeeDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
