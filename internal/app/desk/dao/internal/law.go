// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// LawDao is the data access object for table law.
type LawDao struct {
	table   string     // table is the underlying table name of the DAO.
	group   string     // group is the database configuration group name of current DAO.
	columns LawColumns // columns contains all the column names of Table for convenient usage.
}

// LawColumns defines and stores column names for table law.
type LawColumns struct {
	Id         string // UID
	Fileid     string // 文件id
	Publish    string // 公布日期
	Expiry     string // 施行日期
	Office     string // 制定机关
	Title      string // 标题
	Type       string // 类型
	Word       string // word
	Pdf        string // pdf
	Url        string // 外部链接
	Status     string // 0 无效,1 有效 时效性
	Level      string // 法律效力位阶
	Display    string // 是否展示,0不展示1展示
	Content    string // 内容
	Attachment string // 附件
	Height     string // 0高1中2低
	Rank       string // 排序
	Crawler    string // 是否爬取,0 非爬取 1 爬取
}

//  lawColumns holds the columns for table law.
var lawColumns = LawColumns{
	Id:         "id",
	Fileid:     "fileid",
	Publish:    "publish",
	Expiry:     "expiry",
	Office:     "office",
	Title:      "title",
	Type:       "type",
	Word:       "word",
	Pdf:        "pdf",
	Url:        "url",
	Status:     "status",
	Level:      "level",
	Display:    "display",
	Content:    "content",
	Attachment: "attachment",
	Height:     "height",
	Rank:       "rank",
	Crawler:    "crawler",
}

// NewLawDao creates and returns a new DAO object for table data access.
func NewLawDao() *LawDao {
	return &LawDao{
		group:   "default",
		table:   "law",
		columns: lawColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *LawDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *LawDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *LawDao) Columns() LawColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *LawDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *LawDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *LawDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
