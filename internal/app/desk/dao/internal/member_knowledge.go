// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// MemberKnowledgeDao is the data access object for table member_knowledge.
type MemberKnowledgeDao struct {
	table   string                 // table is the underlying table name of the DAO.
	group   string                 // group is the database configuration group name of current DAO.
	columns MemberKnowledgeColumns // columns contains all the column names of Table for convenient usage.
}

// MemberKnowledgeColumns defines and stores column names for table member_knowledge.
type MemberKnowledgeColumns struct {
	Id                      string //
	Title                   string // 标题
	KnowledgeType           string // 知识类型
	Authority               string // 阅读下载权限，0:所有,1:会员
	PrimaryClassification   string // 一级分类
	SecondaryClassification string // 二级分类
	IntegralSetting         string // 积分设置
	Content                 string // 内容
	ReviewMessage           string // 审核留言
	ReviewStatus            string // 审核状态;0:待审核,1:通过，2:未通过
	UserId                  string // 发布作者
	CreatedAt               string // 发布时间
	UpdatedAt               string // 更新时间
	DeletedAt               string // 删除时间
	UserName                string // 发布作者
	Type                    string // 0:其他,1:视频
	CoverUrl                string // 封面主图
	DetailsUrl              string // 详情主图
	VideoUrl                string // 视频链接
	VideoIntroduction       string // 视频简介
	Views                   string // 浏览量
	AttachmentUrl           string // 附件链接
	OpreviewMessage         string // 管理员留言
	IsAdmin                 string // 是否后台管理员 1 是  0 否
	ShortvideoUrl           string // 视频链接
	Abstract                string // 摘要
	Display                 string // 是否展示,0不展示1展示
	Height                  string // 0高1中2低
	Rank                    string // 排序
	Site                    string // 站点
	OriginalType            string // 原始类型
	Url                     string // 外部链接
	CutStatus               string // 是否展示,0进行中 1 已完成
	Crawler                 string // 是否爬取,0 非爬取 1 爬取
}

//  memberKnowledgeColumns holds the columns for table member_knowledge.
var memberKnowledgeColumns = MemberKnowledgeColumns{
	Id:                      "id",
	Title:                   "title",
	KnowledgeType:           "knowledge_type",
	Authority:               "authority",
	PrimaryClassification:   "primary_classification",
	SecondaryClassification: "secondary_classification",
	IntegralSetting:         "integral_setting",
	Content:                 "content",
	ReviewMessage:           "review_message",
	ReviewStatus:            "review_status",
	UserId:                  "user_id",
	CreatedAt:               "created_at",
	UpdatedAt:               "updated_at",
	DeletedAt:               "deleted_at",
	UserName:                "user_name",
	Type:                    "type",
	CoverUrl:                "cover_url",
	DetailsUrl:              "details_url",
	VideoUrl:                "video_url",
	VideoIntroduction:       "video_introduction",
	Views:                   "views",
	AttachmentUrl:           "attachment_url",
	OpreviewMessage:         "opreview_message",
	IsAdmin:                 "is_admin",
	ShortvideoUrl:           "shortvideo_url",
	Abstract:                "abstract",
	Display:                 "display",
	Height:                  "height",
	Rank:                    "rank",
	Site:                    "site",
	OriginalType:            "original_type",
	Url:                     "url",
	CutStatus:               "cut_status",
	Crawler:                 "crawler",
}

// NewMemberKnowledgeDao creates and returns a new DAO object for table data access.
func NewMemberKnowledgeDao() *MemberKnowledgeDao {
	return &MemberKnowledgeDao{
		group:   "default",
		table:   "member_knowledge",
		columns: memberKnowledgeColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *MemberKnowledgeDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *MemberKnowledgeDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *MemberKnowledgeDao) Columns() MemberKnowledgeColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *MemberKnowledgeDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *MemberKnowledgeDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *MemberKnowledgeDao) Transaction(ctx context.Context, f func(ctx context.Context, tx gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
