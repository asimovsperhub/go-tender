// =================================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// =================================================================================

package do

import (
	"github.com/gogf/gf/v2/frame/g"
	"github.com/gogf/gf/v2/os/gtime"
)

// MemberKnowledge is the golang structure of table member_knowledge for DAO operations like Where/Data.
type MemberKnowledge struct {
	g.Meta                  `orm:"table:member_knowledge, do:true"`
	Id                      interface{} //
	Title                   interface{} // 标题
	KnowledgeType           interface{} // 知识类型
	Authority               interface{} // 阅读下载权限，0:所有,1:会员
	PrimaryClassification   interface{} // 一级分类
	SecondaryClassification interface{} // 二级分类
	IntegralSetting         interface{} // 积分设置
	Content                 interface{} // 内容
	ReviewMessage           interface{} // 审核留言
	ReviewStatus            interface{} // 审核状态;0:待审核,1:通过，2:未通过
	UserId                  interface{} // 发布作者
	CreatedAt               *gtime.Time // 发布时间
	UpdatedAt               *gtime.Time // 更新时间
	DeletedAt               *gtime.Time // 删除时间
	UserName                interface{} // 发布作者
	Type                    interface{} // 0:其他,1:视频
	CoverUrl                interface{} // 封面主图
	DetailsUrl              interface{} // 详情主图
	VideoUrl                interface{} // 视频链接
	VideoIntroduction       interface{} // 视频简介
	Views                   interface{} // 浏览量
	AttachmentUrl           interface{} // 附件链接
	OpreviewMessage         interface{} // 管理员留言
	IsAdmin                 interface{} // 是否后台管理员 1 是  0 否
	ShortvideoUrl           interface{} // 视频链接
	Abstract                interface{} // 摘要
	Display                 interface{} // 是否展示,0不展示1展示
	Height                  interface{} // 0高1中2低
	Rank                    interface{} // 排序
	Site                    interface{} // 站点
	OriginalType            interface{} // 原始类型
	Url                     interface{} // 外部链接
	CutStatus               interface{} // 是否展示,0进行中 1 已完成
	Crawler                 interface{} // 是否爬取,0 非爬取 1 爬取
}
